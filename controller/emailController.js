const asyncHandler = require("express-async-handler")
const nodemailer = require("nodemailer")

exports.sendEmail = asyncHandler(async (req, res) => {
  const senderEmail = req.body.email
  const senderName = req.body.name
  const content = req.body.message

  const output = `<p>${content}</p>
`
  const outputResponse = `
<h3>Hi ${senderName}</h3>
<p>Thank you for sending us a message. We will answer as soon as possible.</p>
<small>This is autogenerated message. Please do not answer it.</small>
`
  const outputNotify = `
<h4>New message from contact form:</h4>
<p>From: ${senderName}</p>
<p>email: ${senderEmail}</p>
<p>Read the full message: <a href="poczta.mydevil.net">open email client</a></p>
`

  const txt = `${content}`
  const txtResponse = `Hi, ${senderName}\n Thank you for sending us a message. We will answer as soon as possible. \n\n
  This is autogenerated message. Please do not answer it.`
  const txtNotify = `New message from contact form: ${senderName}\n email: ${senderEmail}. \n\nRead the full message: poczta.mydevil.net`

  // create  transporter object using the default SMTP transport
  let transporter = nodemailer.createTransport({
    host: "mail54.mydevil.net",
    port: 465,
    secure: true,
    auth: {
      user: "info@tophoneys.com",
      pass: process.env.EMAIL_CLIENT_PASSWORD,
    },
    tls: {
      rejectUnauthorized: false,
    },
  })

  // send actual email
  let info = await transporter.sendMail({
    from: `${senderName}<${senderEmail}>`,
    to: "info@tophoneys.com",
    subject: `New message from: ${senderName}<${senderEmail}>`,
    text: txt,
    html: output,
  })
  // send confirmation email
  await transporter.sendMail({
    from: "TOP HONEYS<info@tophoneys.com>",
    to: `${senderName}<${senderEmail}>`,
    subject: `Thank you for reaching out to us :)`,
    text: txtResponse,
    html: outputResponse,
  })
  // send new email notification
  await transporter.sendMail({
    from: "TOP HONEYS<info@tophoneys.com>",
    // replace with vendor email
    to: `pietrzykowski77@gmail.com`,
    subject: `New email in TOP HONEYS inbox!`,
    text: txtNotify,
    html: outputNotify,
  })
  res.status(200).json({
    status: "success",
    message: "email has been sent",
    envelope: info.envelope,
    accepted: info.accepted,
  })
})

exports.sendConfirmationEmail = async (
  clientEmail,
  clientName,
  orderId,
  type
) => {
  // Order creation confirmation email:
  const orderHtmlOutput = `
  <p>Thank you for creating an order.</p>
  <p>Order ID: ${orderId}</p>
  <p>Order details and status: <a href="https://tophoneys.com/order/${orderId}">link</a></p>
  <p>If you haven't paid for your products yet you may do this within 8 days.</p>
  <small>This is autogenerated message. Please do not answer it.</small>
  `
  const orderTxtOutput = `Hi, ${clientName}\n Thank you for creating an order.\n\n
  Order ID:  ${orderId}\n\nOrder details and status: "https://tophoneys.com/order/${orderId}"`

  // Purchase confirmation email:
  const PurchaseHtmlOutput = `
  <p>${clientName}, thank you for your purchase at TOP HONEYS.</p>
  <p>We usually deliver your items within 2 to 4 working days.</p>
  <p>Your purchase items and shipping status: <a href="https://tophoneys.com/order/${orderId}">link</a></p>
  <p>We hope to see you soon :).</p>
  <small>This is autogenerated message. Please do not answer it.</small>
  `
  const PurchaseTxtOutput = `${clientName}, thank you your purchase at TOP HONEYS.\n\n
  We usually deliver your items within 2 to 4 working days.\n\nYour purchase items and shipping status: "https://tophoneys.com/order/${orderId}"\n\nWe hope to see you soon :).`

  // determine email content based on passed type
  const htmlOutput = type === "order" ? orderHtmlOutput : PurchaseHtmlOutput
  const txtOutput = type === "order" ? orderTxtOutput : PurchaseTxtOutput
  const title =
    type === "order"
      ? `Your order at TOP HONEYS`
      : `Thank you for your purchase at TOP HONEYS`

  try {
    // create  transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
      host: "mail54.mydevil.net",
      port: 465,
      secure: true,
      auth: {
        user: "info@tophoneys.com",
        pass: process.env.EMAIL_CLIENT_PASSWORD,
      },
      tls: {
        rejectUnauthorized: false,
      },
    })

    // send confirmation email
    let info = await transporter.sendMail({
      from: "TOP HONEYS<info@tophoneys.com>",
      to: `${clientName}<${clientEmail}>`,
      subject: title,
      text: txtOutput,
      html: htmlOutput,
    })

    if (type === "purchase") {
      // send purchase notification to vendor
      await transporter.sendMail({
        from: "TOP HONEYS<info@tophoneys.com>",
        // replace with vendor email
        to: `pietrzykowski77@gmail.com`,
        subject: `New purchase in your shop!`,
        text: `New purchase in your shop, order number: ${orderId}`,
        html: `<p>New purchase in your shop, order number: ${orderId}</p>`,
      })
      console.log("Purchase notification sent")
    }
    console.log(info.envelope)
  } catch (err) {
    console.log(err)
  }
}
